---
services:
  database:
    image: timescale/timescaledb:latest-pg16
    container_name: database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - database_data:/var/lib/postgresql/data
    restart: always
  api:
    image: postgrest/postgrest:latest
    container_name: api
    environment:
      PGRST_DB_URI: ${PGRST_DB_URI}
      PGRST_DB_SCHEMA: ${PGRST_DB_SCHEMA}
      PGRST_DB_ANON_ROLE: ${POSTGRES_USER}
      PGRST_JWT_SECRET: ${PGRST_JWT_SECRET}
      PGRST_SERVER_PROXY_URI: ${PGRST_SERVER_PROXY_URI}
      PGRST_DB_AGGREGATES_ENABLED: ${PGRST_DB_AGGREGATES_ENABLED}
    ports:
      - '3000:3000'
    depends_on:
      - database
    volumes:
      - ./public.pem:/etc/postgrest/public.pem
    restart: always
  redis:
    image: docker.io/library/redis:7.2.5
    container_name: authentik-redis
    command: --save 60 1 --loglevel warning
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping | grep PONG']
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis_data:/data
    restart: unless-stopped
  server:
    image: ghcr.io/goauthentik/server:2024.4.2
    container_name: authentik-server
    command: server
    environment:
      - AUTHENTIK_REDIS__HOST=authentik-redis
      - AUTHENTIK_POSTGRESQL__HOST=${POSTGRES_HOST}
      - AUTHENTIK_POSTGRESQL__USER=${POSTGRES_USER:-authentik}
      - AUTHENTIK_POSTGRESQL__NAME=${POSTGRES_DB:-authentik}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD:?error}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY:?error}
      - AUTHENTIK_ERROR_REPORTING__ENABLED=${AUTHENTIK_ERROR_REPORTING:-false}

    ports:
      - 9000:9000
      - 9443:9443
    volumes:
      - ./media:/media
      - ./custom-templates:/templates
    depends_on:
      - database
      - redis
    restart: unless-stopped
  worker:
    image: ghcr.io/goauthentik/server:2024.4.2
    container_name: authentik-worker
    command: worker
    environment:
      - AUTHENTIK_REDIS__HOST=authentik-redis
      - AUTHENTIK_POSTGRESQL__HOST=${POSTGRES_HOST}
      - AUTHENTIK_POSTGRESQL__USER=${POSTGRES_USER:-authentik}
      - AUTHENTIK_POSTGRESQL__NAME=${POSTGRES_DB:-authentik}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD:?error}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY:?error}
      - AUTHENTIK_ERROR_REPORTING__ENABLED=${AUTHENTIK_ERROR_REPORTING:-false}
    volumes:
      - ./media:/media
      - ./certs:/certs
      - ./custom-templates:/templates
    depends_on:
      - database
      - redis
    restart: unless-stopped

volumes:
  database_data:
    driver: local
  redis_data:
    driver: local
